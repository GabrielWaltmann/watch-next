{"version":3,"file":"Index-6519bbda.js","sources":["../../src/Components/Input/Email/Style/Index.ts","../../node_modules/phosphor-react/dist/icons/Envelope.esm.js","../../src/Components/Input/Email/Index.tsx"],"sourcesContent":["import  styled from 'styled-components';\nimport { GlobalTheme } from '../../../../Style/Tokens';\nconst fortSize = GlobalTheme.fontSize\nconst padding = GlobalTheme.padding\nconst colors = GlobalTheme.colors\n\nexport const Input = styled.input`\n    border: none;\n    background-color: ${colors.transparent};\n    color: ${colors['white-800']};\n    font-size: ${GlobalTheme.fontSize.sm};\n    font-weight: normal;\n    padding: 10px 0 10px 16px;\n\n    &::placeholder{\n        color: ${colors['gray-400']};\n    }\n\n    &:focus{\n        outline: none;\n    }\n`\n\nexport const Container = styled.div`\n    max-height: 56px;\n    padding: ${padding.sm} ${padding.me};\n    width: 100%;\n    position: relative;\n    background-color: ${colors['gray-600']};\n    border-radius: ${GlobalTheme.rounded};\n    display: flex;\n    align-items: center;\n\n    &:focus{\n        outline-color: ${colors['gray-400']};\n    }\n\n    &:hover{\n        cursor: text;\n    }\n\n    svg{\n        height: 32px;\n        width: 32px;\n        color: ${colors['gray-400']};\n    }\n`","import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56a0,0,0,0,1,0,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"224 56 128 144 32 56 224 56\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM98.7,128,40,181.8V74.2Zm11.8,10.9,12.1,11a8,8,0,0,0,10.8,0l12.1-11L203.4,192H52.6ZM157.3,128,216,74.2V181.8Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Envelope = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nEnvelope.displayName = \"Envelope\";\n\nexport default Envelope;\n//# sourceMappingURL=Envelope.esm.js.map\n","import { InputHTMLAttributes } from \"react\";\nimport { Input, Container } from \"./Style/Index\"; \nimport { Envelope } from \"phosphor-react\";\n\nexport interface Props extends InputHTMLAttributes<HTMLInputElement> {}\n\nexport function EmailInput(props: Props){\n    return(\n        <Container>\n            <Envelope/>\n            <Input \n            placeholder={'exemple@exemple.com'}\n            {...props}\n            />\n        </Container>\n    )\n}\n"],"names":["padding","GlobalTheme","colors","Input","styled","Container","pathsByWeight","Map","set","color","_jsxs","_Fragment","_jsx","renderPath","__name","weight","renderPathForWeight","Envelope","forwardRef","props","ref","IconBase","Object","assign","displayName","Envelope$1","EmailInput"],"mappings":"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"}